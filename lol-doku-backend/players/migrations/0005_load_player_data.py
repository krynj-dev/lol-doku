# Generated by Django 5.0.4 on 2024-05-02 14:35
import json
from django.db import migrations, transaction, IntegrityError

def int_or_none(n):
    if n == '' or n is None:
        return None
    return int(n)

def load_players(apps, schema_editor):
    Player = apps.get_model("players", "Player")
    PlayerAlternateName = apps.get_model("players", "PlayerAlternateName")
    data = None
    with open('db_data/players.json', 'r+', encoding='utf-8') as f:
        data = json.load(f)
    if data is None:
        return
    for k in data.keys():
        plr = data[k]
        try:
            with transaction.atomic():
                db_plr = Player()
                db_plr.display_name = plr['display_name']
                db_plr.real_name = plr['name']
                db_plr.country = plr['country']
                db_plr.age = int_or_none(plr['age'])
                db_plr.residency = plr['residency']
                db_plr.save()
                for alt_name in plr['alternate_names']:
                    try:
                        with transaction.atomic():
                            db_alt_name = PlayerAlternateName()
                            db_alt_name.player_name = db_plr
                            db_alt_name.alternate_name = alt_name
                            db_alt_name.save()
                    except IntegrityError:
                        db_alt_name.delete()
        except IntegrityError:
            db_plr.delete()

class Migration(migrations.Migration):

    dependencies = [
        ('players', '0004_alter_player_age'),
    ]

    operations = [
        migrations.RunPython(load_players)
    ]
